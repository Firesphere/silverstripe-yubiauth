<?php
/**
 * Created by PhpStorm.
 * User: simon
 * Date: 05-May-18
 * Time: 15:47
 */

namespace Firesphere\YubiAuth\Tests;

use Firesphere\BootstrapMFA\Authenticators\BootstrapMFAAuthenticator;
use Firesphere\YubiAuth\Authenticators\YubikeyMemberAuthenticator;
use Firesphere\YubiAuth\Forms\YubikeyForm;
use Firesphere\YubiAuth\Forms\YubikeyLoginForm;
use Firesphere\YubiAuth\Handlers\YubikeyLoginHandler;
use SilverStripe\Control\HTTPRequest;
use SilverStripe\Control\Session;
use SilverStripe\Core\Injector\Injector;
use SilverStripe\Dev\SapphireTest;
use SilverStripe\Security\Security;

class YubikeyLoginHandlerTest extends SapphireTest
{
    protected static $fixture_file = '../fixtures/Member.yml';

    /**
     * @var YubikeyLoginHandler
     */
    protected $handler;

    public function testLoginForm()
    {
        $form = $this->handler->LoginForm();

        $this->assertInstanceOf(YubikeyLoginForm::class, $form);
    }

    public function testSecondFactor()
    {
        $result = $this->handler->secondFactor();

        $this->assertTrue(is_array($result));
        $this->assertInstanceOf(YubikeyForm::class, $result['Form']);
    }

    public function testYubikeyForm()
    {
        $this->assertInstanceOf(YubikeyForm::class, $this->handler->yubikeyForm());
    }

    public function testMFAForm()
    {
        $mfaForm = $this->handler->MFAForm();
        $this->assertInstanceOf(YubikeyForm::class, $mfaForm);
    }

    public function testDoLoginBackURL()
    {
        $backURL = '/blablabla';
        $request = new HTTPRequest('POST', '/');
        $request->setSession(new Session(['hi' => 'bye']));
        $this->handler->setRequest($request);
        $form = Injector::inst()->get(
            YubikeyLoginForm::class,
            true,
            [$this->handler, YubikeyMemberAuthenticator::class, '']
        );
        $response = $this->handler->doLogin(
            [

                'Email'    => 'admin@silverstripe.com',
                'Password' => 'password',
                'BackURL'  => $backURL
            ],
            $form,
            $request
        );

        $data = $request->getSession()->get(BootstrapMFAAuthenticator::SESSION_KEY);
        $this->assertEquals($backURL, $data['BackURL']);
        $this->assertEquals($backURL, $data['Data']['BackURL']);
    }

    public function testDoLoginUnsuccessful()
    {
        $request = new HTTPRequest('POST', Security::login_url());
        $request->setSession(new Session(['hi' => 'bye']));
        $this->handler->setRequest($request);
        $form = Injector::inst()->get(
            YubikeyLoginForm::class,
            true,
            [$this->handler, YubikeyMemberAuthenticator::class, '']
        );
        $response = $this->handler->doLogin(
            [

                'Email'    => 'admin@silverstripe.com',
                'Password' => 'incorrect',
            ],
            $form,
            $request
        );
        $this->assertContains('login', $response->getHeader('location'));
    }

    protected function setUp()
    {
        $this->handler = Injector::inst()->createWithArgs(
            YubikeyLoginHandler::class,
            [Security::login_url(), new YubikeyMemberAuthenticator()]
        );

        return parent::setUp(); // TODO: Change the autogenerated stub
    }
}
